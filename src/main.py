import asyncio
import os
import logging
# from dotenv import load_dotenv  # ‚Üê –Ω–µ –∑–∞–±—É–¥—å –∏–º–ø–æ—Ä—Ç
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from handlers import commands, category  # ‚Üê —Ä–æ—É—Ç–µ—Ä—ã


# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –î–û –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
# env_name = os.getenv("ENV")
# dotenv_path = f".env.{env_name}" if env_name else ".env"  # –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ENV –Ω–µ—Ç ‚Äî –≥—Ä—É–∑–∏–º .env

# load_dotenv(dotenv_path)

BOT_TOKEN = os.getenv("BOT_TOKEN")


# –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–æ–∑–¥–∞—Ç—å Bot –∏ Dispatcher
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(commands.router)
dp.include_router(category.router)

# –ó–∞–ø—É—Å–∫
async def main():
    logging.basicConfig(level=logging.INFO)
    print(f"üöÄ [{env_name}] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
